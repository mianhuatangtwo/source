docker run

	docker run -d -p 9000:9000 -p 43778:43778 --name minio1 -e MINIO_SERVER_URL="http://example.com" --add-host example.com:192.168.20.221  -v /mnt/data:/data   -v /mnt/config:/root/.minio minio/minio server /data --console-address 0.0.0.0:43778

nginx.conf


	server {
	     listen 80;
	     server_name example.com;
	        location /{
	           proxy_set_header Host $http_host;
	           proxy_pass http://localhost:9000;
	        }
	}

docker-compose

	version: '3.7'

	x-minio-common: &minio-common
	  image: quay.io/minio/minio:RELEASE.2021-10-23T03-28-24Z
	  command: server --console-address ":9001" http://minio{1...4}/data{1...2}
	  expose:
	    - "9000"
	    - "9001"
	  environment:
	    MINIO_ROOT_USER: minio
	    MINIO_SERVER_URL: http://example.com
	    MINIO_ROOT_PASSWORD: minio123
	  extra_hosts:
	    - example.com:192.168.20.221

	  healthcheck:
	    test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
	    interval: 30s
	    timeout: 20s
	    retries: 3

	# starts 4 docker containers running minio server instances.
	# using nginx reverse proxy, load balancing, you can access
	# it through port 9000.
	services:
	  minio1:
	    <<: *minio-common
	    hostname: minio1


	  minio2:
	    <<: *minio-common
	    hostname: minio2


	  minio3:
	    <<: *minio-common
	    hostname: minio3


	  minio4:
	    <<: *minio-common
	    hostname: minio4

	  nginx:
	    image: nginx:1.19.2-alpine
	    hostname: nginx
	    volumes:
	      - ./nginx.conf:/etc/nginx/nginx.conf:ro
	    ports:
	      - "80:80"
	      - "9001:9001"
	    depends_on:
	      - minio1
	      - minio2
	      - minio3
	      - minio4


nginx

	user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;
    client_max_body_size    1000m;

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;

upstream minio_http {
    server minio1:9000;
    server minio2:9000;
    server minio3:9000;
    server minio4:9000;
}
upstream minio_console {
    server minio1:9001;
    server minio2:9001;
    server minio3:9001;
    server minio4:9001;
}


    server {
     listen 80;
     server_name example.com;
        location /{
           proxy_set_header Host $http_host;
           proxy_pass http://minio_http;
        }
    }
    server {
     listen 9001;
     server_name example.com;
        location /{
           proxy_set_header Host $http_host;
           proxy_pass http://minio_console;
        }
    }
}


客户端
https://blog.csdn.net/qq_38461773/article/details/107534421
